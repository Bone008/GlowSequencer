<Window x:Class="GlowSequencer.View.TransferDirectlyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:GlowSequencer.Model"
        xmlns:vm="clr-namespace:GlowSequencer.ViewModel"
        xmlns:local="clr-namespace:GlowSequencer.View"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:TransferDirectlyViewModel, IsDesignTimeCreatable=False}"
        Title="Transfer directly to equipment"
        Width="605" MinWidth="605"
        Height="770"
        Icon="/GlowSequencer;component/Resources/icon.ico"
        WindowStartupLocation="CenterOwner">

  <Window.CommandBindings>
    <CommandBinding Command="local:TransferDirectlyCommands.ToggleSelectAll"
                    Executed="CommandBinding_ExecuteToggleSelectAll" />
    <CommandBinding Command="local:TransferDirectlyCommands.AutoAssignTracks"
                    Executed="CommandBinding_ExecuteAutoAssignTracks" />
    <CommandBinding Command="local:TransferDirectlyCommands.ClearAssignedTracks"
                    Executed="CommandBinding_ExecuteClearAssignedTracks" />
    <CommandBinding Command="local:TransferDirectlyCommands.Start"
                    CanExecute="CommandBinding_CanExecuteStartStop"
                    Executed="CommandBinding_ExecuteStart" />
    <CommandBinding Command="local:TransferDirectlyCommands.Stop"
                    CanExecute="CommandBinding_CanExecuteStartStop"
                    Executed="CommandBinding_ExecuteStop" />
    <CommandBinding Command="local:TransferDirectlyCommands.Transfer"
                    CanExecute="CommandBinding_CanExecuteTransfer"
                    Executed="CommandBinding_ExecuteTransfer" />
    <CommandBinding Command="local:TransferDirectlyCommands.TransferAndStart"
                    CanExecute="CommandBinding_CanExecuteTransfer"
                    Executed="CommandBinding_ExecuteTransferAndStart" />
    <CommandBinding Command="local:TransferDirectlyCommands.ToggleIdentify"
                    Executed="CommandBinding_ExecuteToggleIdentify" />
  </Window.CommandBindings>

  <Window.Resources>
    <Style TargetType="ToggleButton">
      <Style.Triggers>
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="BorderThickness" Value="3" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="Button">
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style>
  </Window.Resources>

  <DockPanel Margin="10">
    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,5">
      <Button Width="150" Height="26"
              Content="Save this configuration"
              ToolTip="Remember the current list of connected devices, their assigned tracks and colors, and other settings."
              Click="SaveSettings_Click" />
      <Button Width="150" Height="26" Margin="5,0,0,0"
              Content="Clear saved configuration"
              ToolTip="Forget the stored list of expected devices and clear their assigned tracks."
              IsEnabled="{Binding HasSavedSettings}"
              Click="ClearSettings_Click" />
      <Button Width="150" Height="26" Margin="25,0,0,0"
              Content="Auto-assign tracks"
              ToolTip="Try to guess which track belongs to which unassigned device based on its name."
              Command="local:TransferDirectlyCommands.AutoAssignTracks" />
    </StackPanel>
    
    <Label DockPanel.Dock="Top">
      <TextBlock>
        Devices
        (<TextBlock Text="{Binding ConnectedDevices.Count}" /><!--
        --><TextBlock Text="{Binding AllDevices.Count, StringFormat=' / {0} connected'}"
                      Visibility="{Binding HasSavedSettings, Converter={StaticResource conv_BoolToVisibility}}"/>):
      </TextBlock>
    </Label>

    <StackPanel DockPanel.Dock="Bottom" Orientation="Vertical" Margin="0,5,0,0">
      <StackPanel Orientation="Horizontal" Margin="0,5">
        <Label Padding="0,5,5,5" Width="75">Start time:</Label>
        <TextBox Width="150" Text="{Binding ExportStartTime, Converter={StaticResource conv_TimeSpanToString}}" />
        <Button Width="50" Margin="10,0" Click="CursorButton_Click">Cursor</Button>
        <Button Width="50" Click="ZeroButton_Click">Zero</Button>
      </StackPanel>
      <StackPanel Orientation="Horizontal" Margin="0,5">
        <Label Padding="0,5,5,5" Width="75">Color mode:</Label>
        <ComboBox Width="150" Text="test"
                  SelectedValue="{Binding ColorMode, Mode=TwoWay}"
                  SelectedValuePath="Tag">
          <ComboBoxItem Tag="{x:Static model:ColorTransformMode.None}" Content="normal" />
          <ComboBoxItem Tag="{x:Static model:ColorTransformMode.Brighten}"
                        Content="bright mode"
                        ToolTip="Bright mode increases the brightness of all dark colors to at least 20 (out of 255) to allow rehearsing in bright environments." />
          <ComboBoxItem Tag="{x:Static model:ColorTransformMode.Darken}"
                        Content="dark mode"
                        ToolTip="Dark mode limits the maximum brightness of all colors in order to at most 10 (out of 255) to reduce overexposure while filming." />
        </ComboBox>
      </StackPanel>
      <DockPanel>
        <Expander DockPanel.Dock="Right" Width="150" Padding="5"
                  Header="Advanced settings"
                  BorderBrush="#FFABADB3" BorderThickness="1"
                  HorizontalContentAlignment="Right">
          <StackPanel Orientation="Vertical">
            <StackPanel Style="{StaticResource s_FormRow}"
                        HorizontalAlignment="Right"
                        ToolTip="How many USB devices to send to at the same time. Decreases total transfer duration but might increase error rate.">
              <Label Content="Max parallel:" />
              <TextBox Text="{Binding MaxConcurrentTransfers}" Width="50" HorizontalContentAlignment="Right" />
            </StackPanel>
            <StackPanel Style="{StaticResource s_FormRow}"
                        HorizontalAlignment="Right"
                        ToolTip="How often to retry sending a program to each USB device before giving up.">
              <Label Content="Max retries:" />
              <TextBox Text="{Binding MaxTransferRetries}" Width="50" HorizontalContentAlignment="Right" />
            </StackPanel>
            <Button Content="Reset" ToolTip="Reset advanced settings to default values."
                    HorizontalAlignment="Right" Margin="0,5" Width="50"
                    Click="ResetAdvanced_Click" />
          </StackPanel>
        </Expander>

        <StackPanel Orientation="Horizontal" Margin="0,5" VerticalAlignment="Top">
          <CheckBox IsChecked="{Binding EnableMusic}" VerticalContentAlignment="Center" Margin="0,1,5,0">
            Enable music &#x2013; assuming a sound system delay of
          </CheckBox>
          <StackPanel Orientation="Horizontal" IsEnabled="{Binding EnableMusic}">
            <TextBox Text="{Binding MusicSystemDelayMs}" Width="50" Height="26" HorizontalContentAlignment="Right"
             ToolTip="How much to correct for the sound system's audio delay.&#10;Increase this value to make the clubs start LATER than the music.&#10;Decrease this value to make the clubs start EARLIER, but not below 0."
             />
            <Label>ms</Label>
          </StackPanel>
        </StackPanel>
      </DockPanel>


      <StackPanel IsEnabled="{Binding IsUsbBusy, Converter={StaticResource conv_Invert}}"
                  Orientation="Horizontal" Margin="0,15,0,0">
        <Button Width="100" Height="40"
                Content="Start (F5)"
                ToolTip="Start playback of the stored program on all selected devices."
                Command="local:TransferDirectlyCommands.Start"/>
        <Button Width="100" Height="40" Margin="10,0,0,0"
                Content="Stop (F6)"
                ToolTip="Stop playback on all selected devices."
                Command="local:TransferDirectlyCommands.Stop" />
        <ToggleButton Width="100" Height="40" Margin="10,0,0,0"
                Content="Identify (F7)"
                ToolTip="Toggle the highlighting of the selected devices."
                IsChecked="{Binding EnableIdentify}" />
        <Button Width="100" Height="40" Margin="10,0,0,0"
                Content="Transfer (F10)"
                ToolTip="Transfer the assigned tracks to all selected devices."
                Command="local:TransferDirectlyCommands.Transfer" />
        <Button Width="130" Height="40" Margin="10,0,0,0"
                Content="Transfer + Start (F11)"
                ToolTip="Transfer the assigned tracks to all selected devices, and then start playback."
                Command="local:TransferDirectlyCommands.TransferAndStart" />
      </StackPanel>
      <ProgressBar Height="10" Margin="0,5,0,0"
                     Maximum="100"
                     Value="{Binding TransferProgress, Mode=OneWay}"/>

      <DockPanel>
        <Button DockPanel.Dock="Right" VerticalAlignment="Center" Padding="5,0"
                Click="ClearLog_Click" ToolTip="Clear log">X</Button>
        <Button DockPanel.Dock="Right" VerticalAlignment="Center" Padding="5,0" Margin="0,0,5,0"
                Click="ShowLogDirectory_Click" ToolTip="Open log file directory">Show in explorer</Button>
        <Label>Log:</Label>
      </DockPanel>
      <TextBox IsReadOnly="True" Height="100" VerticalContentAlignment="Top"
               TextWrapping="Wrap" VerticalScrollBarVisibility="Visible"
               Text="{Binding LogOutput, Mode=OneWay}"
               TextChanged="Log_TextChanged" />
    </StackPanel>

    <ListView Name="devicesList"
              SelectionMode="Extended"
              ScrollViewer.VerticalScrollBarVisibility="Visible"
              ItemsSource="{Binding AllDevicesSorted}"
              SelectionChanged="devicesList_SelectionChanged"
              d:ItemsSource="{d:SampleData ItemCount=5}">
      <ListView.InputBindings>
        <KeyBinding Key="Delete" Command="local:TransferDirectlyCommands.ClearAssignedTracks"/>
      </ListView.InputBindings>
      <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
          <EventSetter Event="MouseDoubleClick" Handler="devicesListItem_MouseDoubleClick" />
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsPersistent}" Value="False">
              <Setter Property="FontWeight" Value="DemiBold" />
              <Setter Property="Foreground" Value="#333333" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsConnected}" Value="False">
              <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ListView.ItemContainerStyle>
      <ListView.View>
        <GridView>
          <GridViewColumn Width="30">
            <GridViewColumn.Header>
              <CheckBox Name="selectAll"
                        ToolTip="Select all (F12)" Margin="-2,0,0,0"
                        Checked="selectAll_Checked"
                        Unchecked="selectAll_Unchecked" />
            </GridViewColumn.Header>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <CheckBox Focusable="False" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=IsSelected}" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="Name" Width="110"
                          DisplayMemberBinding="{Binding Name}" />
          <GridViewColumn Header="Stored program" Width="180"
                          DisplayMemberBinding="{Binding ProgramName}" />
          <GridViewColumn Header="Assigned track" Width="160">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <ComboBox ItemsSource="{Binding Path=DataContext.AllTracks, RelativeSource={RelativeSource AncestorType=ListView}}"
                          DisplayMemberPath="Label"
                          SelectedItem="{Binding AssignedTrack}" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="Identify" Width="45">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <xctk:ColorPicker ShowDropDownButton="False"
                                  SelectedColor="{Binding IdentifyColor}"
                                  ToolTip="Which color to use when Identify is turned on." />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
        </GridView>
      </ListView.View>
    </ListView>
  </DockPanel>
</Window>
